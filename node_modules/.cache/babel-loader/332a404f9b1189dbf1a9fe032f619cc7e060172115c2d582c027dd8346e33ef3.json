{"ast":null,"code":"import _defineProperty from\"/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useCallback,useState}from\"react\";export default function useFormValidation(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setError=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),isInputValid=_useState6[0],setIsInputValid=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isValid=_useState8[0],setIsValid=_useState8[1];function handleChange(evt){var name=evt.target.name;var value=evt.target.value;var validationMessage=evt.target.validationMessage;var valid=evt.target.validity.valid;var form=evt.target.form;setValues(function(firstValues){return _objectSpread(_objectSpread({},firstValues),{},_defineProperty({},name,value));});setError(function(firsError){return _objectSpread(_objectSpread({},firsError),{},_defineProperty({},name,validationMessage));});setIsInputValid(function(firstInputValid){return _objectSpread(_objectSpread({},firstInputValid),{},_defineProperty({},name,valid));});setIsValid(form.checkValidity());}function reset(){var obj=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};setValues(obj);setError({});setIsInputValid({});setIsValid(false);}var setInitialData=useCallback(function(name,value){setValues(function(firstValues){return _objectSpread(_objectSpread({},firstValues),{},_defineProperty({},name,value));});},[]);return{values:values,errors:errors,isInputValid:isInputValid,isValid:isValid,handleChange:handleChange,reset:reset,setInitialData:setInitialData};}","map":{"version":3,"names":["useCallback","useState","useFormValidation","_useState","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","errors","setError","_useState5","_useState6","isInputValid","setIsInputValid","_useState7","_useState8","isValid","setIsValid","handleChange","evt","name","target","value","validationMessage","valid","validity","form","firstValues","_objectSpread","_defineProperty","firsError","firstInputValid","checkValidity","reset","obj","arguments","length","undefined","setInitialData"],"sources":["/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/src/utils/useFormValidation.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport default function useFormValidation() {\n  const [values, setValues] = useState({});\n  const [errors, setError] = useState({});\n  const [isInputValid, setIsInputValid] = useState({});\n  const [isValid, setIsValid] = useState(false);\n\n\n  function handleChange(evt) {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    const validationMessage = evt.target.validationMessage;\n    const valid = evt.target.validity.valid;\n    const form = evt.target.form;\n\n    setValues((firstValues) => {\n      return { ...firstValues, [name]: value };\n    });\n    setError((firsError) => {\n      return { ...firsError, [name]: validationMessage };\n    });\n    setIsInputValid((firstInputValid) => {\n      return { ...firstInputValid, [name]: valid };\n    });\n    setIsValid(form.checkValidity());\n}\n    function reset (obj = {}) {\n        setValues(obj)\n        setError({})\n        setIsInputValid({})\n        setIsValid(false)\n    }\n    const setInitialData = useCallback((name, value) => {\n        setValues((firstValues) => {\n            return { ...firstValues, [name]: value };\n          })\n    }, [])\n\n  return { values, errors, isInputValid, isValid, handleChange, reset, setInitialData };\n}\n"],"mappings":"8aAAA,OAASA,WAAW,CAAEC,QAAQ,KAAQ,OAAO,CAE7C,cAAe,SAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC1C,IAAAC,SAAA,CAA4BF,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAG,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IACxB,IAAAI,UAAA,CAA2BP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAQ,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAhCE,MAAM,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACvB,IAAAG,UAAA,CAAwCX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAY,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA7CE,YAAY,CAAAD,UAAA,IAAEE,eAAe,CAAAF,UAAA,IACpC,IAAAG,UAAA,CAA8Bf,QAAQ,CAAC,KAAK,CAAC,CAAAgB,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAAtCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAG1B,QAAS,CAAAG,YAAYA,CAACC,GAAG,CAAE,CACzB,GAAM,CAAAC,IAAI,CAAGD,GAAG,CAACE,MAAM,CAACD,IAAI,CAC5B,GAAM,CAAAE,KAAK,CAAGH,GAAG,CAACE,MAAM,CAACC,KAAK,CAC9B,GAAM,CAAAC,iBAAiB,CAAGJ,GAAG,CAACE,MAAM,CAACE,iBAAiB,CACtD,GAAM,CAAAC,KAAK,CAAGL,GAAG,CAACE,MAAM,CAACI,QAAQ,CAACD,KAAK,CACvC,GAAM,CAAAE,IAAI,CAAGP,GAAG,CAACE,MAAM,CAACK,IAAI,CAE5BrB,SAAS,CAAC,SAACsB,WAAW,CAAK,CACzB,OAAAC,aAAA,CAAAA,aAAA,IAAYD,WAAW,KAAAE,eAAA,IAAGT,IAAI,CAAGE,KAAK,GACxC,CAAC,CAAC,CACFb,QAAQ,CAAC,SAACqB,SAAS,CAAK,CACtB,OAAAF,aAAA,CAAAA,aAAA,IAAYE,SAAS,KAAAD,eAAA,IAAGT,IAAI,CAAGG,iBAAiB,GAClD,CAAC,CAAC,CACFV,eAAe,CAAC,SAACkB,eAAe,CAAK,CACnC,OAAAH,aAAA,CAAAA,aAAA,IAAYG,eAAe,KAAAF,eAAA,IAAGT,IAAI,CAAGI,KAAK,GAC5C,CAAC,CAAC,CACFP,UAAU,CAACS,IAAI,CAACM,aAAa,CAAC,CAAC,CAAC,CACpC,CACI,QAAS,CAAAC,KAAKA,CAAA,CAAY,IAAV,CAAAC,GAAG,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACpB9B,SAAS,CAAC6B,GAAG,CAAC,CACdzB,QAAQ,CAAC,CAAC,CAAC,CAAC,CACZI,eAAe,CAAC,CAAC,CAAC,CAAC,CACnBI,UAAU,CAAC,KAAK,CAAC,CACrB,CACA,GAAM,CAAAqB,cAAc,CAAGxC,WAAW,CAAC,SAACsB,IAAI,CAAEE,KAAK,CAAK,CAChDjB,SAAS,CAAC,SAACsB,WAAW,CAAK,CACvB,OAAAC,aAAA,CAAAA,aAAA,IAAYD,WAAW,KAAAE,eAAA,IAAGT,IAAI,CAAGE,KAAK,GACxC,CAAC,CAAC,CACR,CAAC,CAAE,EAAE,CAAC,CAER,MAAO,CAAElB,MAAM,CAANA,MAAM,CAAEI,MAAM,CAANA,MAAM,CAAEI,YAAY,CAAZA,YAAY,CAAEI,OAAO,CAAPA,OAAO,CAAEE,YAAY,CAAZA,YAAY,CAAEe,KAAK,CAALA,KAAK,CAAEK,cAAc,CAAdA,cAAe,CAAC,CACvF"},"metadata":{},"sourceType":"module","externalDependencies":[]}