{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport default function useFormValidation() {\n  _s();\n  const [values, setValues] = useState({});\n  const [errors, setError] = useState({});\n  const [isInputValid, setIsInputValid] = useState({});\n  const [isValid, setIsValid] = useState(false);\n  console.log(isValid);\n  console.log(errors);\n  function handleChange(evt) {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    const validationMessage = evt.target.validationMessage;\n    const valid = evt.target.validity.valid;\n    const form = evt.target.form;\n    setValues(firstValues => {\n      return {\n        ...firstValues,\n        [name]: value\n      };\n    });\n    setError(firsError => {\n      return {\n        ...firsError,\n        [name]: validationMessage\n      };\n    });\n    setIsInputValid(firstInputValid => {\n      return {\n        ...firstInputValid,\n        [name]: valid\n      };\n    });\n    setIsValid(form.checkValidity());\n    function reset() {\n      setValues;\n      setError;\n      setIsInputValid;\n    }\n  }\n  return {\n    values,\n    errors,\n    isInputValid,\n    isValid,\n    handleChange\n  };\n}\n_s(useFormValidation, \"2pZ02t4NdHuNxonrmMYY0M12WI8=\");","map":{"version":3,"names":["useState","useFormValidation","_s","values","setValues","errors","setError","isInputValid","setIsInputValid","isValid","setIsValid","console","log","handleChange","evt","name","target","value","validationMessage","valid","validity","form","firstValues","firsError","firstInputValid","checkValidity","reset"],"sources":["/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/src/utils/useFormValidation.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function useFormValidation() {\n  const [values, setValues] = useState({});\n  const [errors, setError] = useState({});\n  const [isInputValid, setIsInputValid] = useState({});\n  const [isValid, setIsValid] = useState(false);\n  console.log(isValid);\n  console.log(errors);\n\n  function handleChange(evt) {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    const validationMessage = evt.target.validationMessage;\n    const valid = evt.target.validity.valid;\n    const form = evt.target.form;\n\n    setValues((firstValues) => {\n      return { ...firstValues, [name]: value };\n    });\n    setError((firsError) => {\n      return { ...firsError, [name]: validationMessage };\n    });\n    setIsInputValid((firstInputValid) => {\n      return { ...firstInputValid, [name]: valid };\n    });\n    setIsValid(form.checkValidity());\n    function reset() {\n        setValues\n        setError\n        setIsInputValid\n\n    }\n  }\n  return { values, errors, isInputValid, isValid, handleChange };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACK,MAAM,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7CW,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACpBE,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;EAEnB,SAASQ,YAAYA,CAACC,GAAG,EAAE;IACzB,MAAMC,IAAI,GAAGD,GAAG,CAACE,MAAM,CAACD,IAAI;IAC5B,MAAME,KAAK,GAAGH,GAAG,CAACE,MAAM,CAACC,KAAK;IAC9B,MAAMC,iBAAiB,GAAGJ,GAAG,CAACE,MAAM,CAACE,iBAAiB;IACtD,MAAMC,KAAK,GAAGL,GAAG,CAACE,MAAM,CAACI,QAAQ,CAACD,KAAK;IACvC,MAAME,IAAI,GAAGP,GAAG,CAACE,MAAM,CAACK,IAAI;IAE5BjB,SAAS,CAAEkB,WAAW,IAAK;MACzB,OAAO;QAAE,GAAGA,WAAW;QAAE,CAACP,IAAI,GAAGE;MAAM,CAAC;IAC1C,CAAC,CAAC;IACFX,QAAQ,CAAEiB,SAAS,IAAK;MACtB,OAAO;QAAE,GAAGA,SAAS;QAAE,CAACR,IAAI,GAAGG;MAAkB,CAAC;IACpD,CAAC,CAAC;IACFV,eAAe,CAAEgB,eAAe,IAAK;MACnC,OAAO;QAAE,GAAGA,eAAe;QAAE,CAACT,IAAI,GAAGI;MAAM,CAAC;IAC9C,CAAC,CAAC;IACFT,UAAU,CAACW,IAAI,CAACI,aAAa,CAAC,CAAC,CAAC;IAChC,SAASC,KAAKA,CAAA,EAAG;MACbtB,SAAS;MACTE,QAAQ;MACRE,eAAe;IAEnB;EACF;EACA,OAAO;IAAEL,MAAM;IAAEE,MAAM;IAAEE,YAAY;IAAEE,OAAO;IAAEI;EAAa,CAAC;AAChE;AAACX,EAAA,CAjCuBD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}