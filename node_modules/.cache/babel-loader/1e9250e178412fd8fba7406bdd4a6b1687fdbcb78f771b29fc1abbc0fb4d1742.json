{"ast":null,"code":"import _classCallCheck from\"/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.baseUrl;this._headers=options.headers;this._authorization=options.headers.authorization;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(){return function(res){if(res.ok){return res.json();}return Promise.reject(\"Error: \".concat(res.status));};}// получаем инфу о пользователе\n},{key:\"getInfo\",value:function getInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:{authorization:this._authorization}}).then(this._checkResponse());/* Возвращаем Promise, с информацией о пользователе. Если запрос не удался, Promise отклоняется.\n     */}// отправляем GET-запрос на сервер для получения списка карточек.\n// Возвращаем Promise, со списком карточек. Если запрос не удался, Promise отклоняется.\n},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:{authorization:this._authorization}}).then(this._checkResponse());}// отправляем PATCH-запрос на сервер для обновления информации о пользователе.\n//  Возвращаем Promise,с обновленной информацией о пользователе. Если запрос не удался, Promise отклоняется.\n},{key:\"setUserInfo\",value:function setUserInfo(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:data.profilename,about:data.job})}).then(this._checkResponse());}// отправляем PATCH-запрос на сервер для обновления аватара пользователя.\n},{key:\"setUserAva\",value:function setUserAva(data){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._checkResponse());}// отправляем POST-запрос на сервер для добавления новой карточки.\n// Принимаем объект data, содержащий данные новой карточки: ссылку на изображение и название.\n// Возвращаем Promise, с информацией о новой карточке. Если запрос не удался, Promise отклоняется.\n},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:data.title,link:data.link})}).then(this._checkResponse());}// отправляем PUT-запрос на сервер для добавления лайка карточке.\n// Принимаем идентификатор карточки cardId. Возвращаем Promise,\n},{key:\"addLike\",value:function addLike(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:\"PUT\",headers:{authorization:this._authorization}}).then(this._checkResponse());}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:\"DELETE\",headers:{authorization:this._authorization}}).then(this._checkResponse());}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:{authorization:this._authorization}}).then(this._checkResponse());}}]);return Api;}();var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-66\",headers:{authorization:\"9a95746f-f7b1-457c-ba4e-3c32c962e5ea\",\"Content-Type\":\"application/json\"}});export default api;","map":{"version":3,"names":["Api","options","_classCallCheck","_url","baseUrl","_headers","headers","_authorization","authorization","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","getInfo","fetch","then","getCards","setUserInfo","data","method","body","JSON","stringify","name","profilename","about","job","setUserAva","avatar","addCard","title","link","addLike","cardId","deleteLike","deleteCard","api"],"sources":["/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n  _checkResponse() {\n    return (res) => {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Error: ${res.status}`);\n    };\n  }\n  // получаем инфу о пользователе\n  getInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse());\n    /* Возвращаем Promise, с информацией о пользователе. Если запрос не удался, Promise отклоняется.\n     */\n  }\n\n  // отправляем GET-запрос на сервер для получения списка карточек.\n  // Возвращаем Promise, со списком карточек. Если запрос не удался, Promise отклоняется.\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse());\n  }\n\n  // отправляем PATCH-запрос на сервер для обновления информации о пользователе.\n  //  Возвращаем Promise,с обновленной информацией о пользователе. Если запрос не удался, Promise отклоняется.\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.profilename,\n        about: data.job,\n      }),\n    }).then(this._checkResponse());\n  }\n\n  // отправляем PATCH-запрос на сервер для обновления аватара пользователя.\n  setUserAva(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._checkResponse());\n  }\n\n  // отправляем POST-запрос на сервер для добавления новой карточки.\n  // Принимаем объект data, содержащий данные новой карточки: ссылку на изображение и название.\n  // Возвращаем Promise, с информацией о новой карточке. Если запрос не удался, Promise отклоняется.\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link,\n      }),\n    }).then(this._checkResponse());\n  }\n\n  // отправляем PUT-запрос на сервер для добавления лайка карточке.\n  // Принимаем идентификатор карточки cardId. Возвращаем Promise,\n  addLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse());\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse());\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse());\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n  headers: {\n    authorization: \"9a95746f-f7b1-457c-ba4e-3c32c962e5ea\",\n    \"Content-Type\": \"application/json\",\n  },\n});\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}