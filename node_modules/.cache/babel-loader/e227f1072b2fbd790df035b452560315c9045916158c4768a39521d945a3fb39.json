{"ast":null,"code":"var _jsxFileName = \"/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/src/components/EditProfilePopup/EditProfilePopup.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport useFormValidation from \"../../utils/useFormValidation\";\nimport PopupWithForm from \"../PopapWithForm/PopupWithForm\";\nimport currentUserContext from \"../../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditProfilePopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose\n  } = _ref;\n  const currentUser = useContext(currentUserContext);\n  const {\n    values,\n    errors,\n    isInputValid,\n    isValid,\n    handleChange,\n    reset,\n    setInitialData\n  } = useFormValidation();\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"profile-edit\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    btnTitle: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    isValid: isValid,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"popup__elements\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `popup__element ${isInputValid.profilename === undefined || isInputValid.profilename ? '' : 'popup__element_invalid'}`,\n        type: \"text\",\n        name: \"profilename\",\n        id: \"name\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        minLength: 2,\n        maxLength: 40,\n        required: \"\",\n        value: values.profilename,\n        onChange: handleChange,\n        isInputValid: isInputValid.profilename\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__error popup__error_type_profilename\",\n        children: errors.profilename\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `popup__element ${isInputValid.job === undefined || isInputValid.job ? '' : 'popup__element_invalid'}`,\n        type: \"text\",\n        name: \"job\",\n        id: \"job\",\n        placeholder: \"\\u0412\\u0438\\u0434 \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\",\n        minLength: 2,\n        maxLength: 200,\n        required: \"\",\n        value: values.job,\n        onChange: handleChange,\n        isInputValid: isInputValid.job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__error popup__error_type_job\",\n        children: errors.job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(EditProfilePopup, \"UfRwdhrzea5VpUqKkNWV++aIT0k=\", false, function () {\n  return [useFormValidation];\n});\n_c = EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["useContext","useEffect","useFormValidation","PopupWithForm","currentUserContext","jsxDEV","_jsxDEV","EditProfilePopup","_ref","_s","isOpen","onClose","currentUser","values","errors","isInputValid","isValid","handleChange","reset","setInitialData","name","title","btnTitle","children","className","profilename","undefined","type","id","placeholder","minLength","maxLength","required","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","job","_c","$RefreshReg$"],"sources":["/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/src/components/EditProfilePopup/EditProfilePopup.jsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport useFormValidation from \"../../utils/useFormValidation\";\nimport PopupWithForm from \"../PopapWithForm/PopupWithForm\";\nimport currentUserContext from \"../../contexts/CurrentUserContext\";\n\nexport default function EditProfilePopup({ isOpen, onClose }) {\n  const currentUser = useContext(currentUserContext)\n  const { values, errors, isInputValid, isValid, handleChange, reset, setInitialData } =\n    useFormValidation();\n    useEffect(() => {\n      \n    })\n  return (\n    <PopupWithForm\n      name=\"profile-edit\"\n      title=\"Редактировать профиль\"\n      btnTitle=\"Сохранить\"\n      isOpen={isOpen}\n      onClose={onClose}\n      isValid= {isValid}\n    >\n      {\" \"}\n      <fieldset className=\"popup__elements\">\n        <input\n          className={`popup__element ${isInputValid.profilename === undefined || isInputValid.profilename ? '' : 'popup__element_invalid'}`}\n          type=\"text\"\n          name=\"profilename\"\n          id=\"name\"\n          placeholder=\"Имя\"\n          minLength={2}\n          maxLength={40}\n          required=\"\"\n          value={values.profilename} \n          onChange={handleChange}\n          isInputValid={isInputValid.profilename}\n        />\n        <span className=\"popup__error popup__error_type_profilename\">\n          {errors.profilename}\n        </span>\n        <input\n            className={`popup__element ${isInputValid.job  === undefined || isInputValid.job ? '' : 'popup__element_invalid'}`}\n          type=\"text\"\n          name=\"job\"\n          id=\"job\"\n          placeholder=\"Вид деятельности\"\n          minLength={2}\n          maxLength={200}\n          required=\"\"\n          value={values.job} \n          onChange={handleChange}\n          isInputValid={isInputValid.job} \n        />\n        <span className=\"popup__error popup__error_type_job\">{errors.job}</span>\n      </fieldset>\n    </PopupWithForm>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}