{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport default function useFormValidation() {\n  _s();\n  const [values, setValues] = useState({});\n  const [error, setError] = useState({});\n  const [isInputValid, setisInputValid] = useState({});\n  const [isValid, setIsvalid] = useState(false);\n  //  console.log(isValid )\n  function handleChange(evt) {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    const validationMessage = evt.target.validationMessage;\n    const valid = evt.target.valid;\n    const form = evt.target.form;\n    setValues(firstValues => {\n      return {\n        ...firstValues,\n        [name]: value\n      };\n    });\n    setError(firsError => {\n      return {\n        ...firsError,\n        [name]: validationMessage\n      };\n    });\n    isInputValid(firstInputValid => {\n      return {\n        ...firstInputValid,\n        [name]: valid\n      };\n    });\n    setIsvalid(form.check);\n  }\n  return {\n    handleChange\n  };\n}\n_s(useFormValidation, \"mN5ORVZ0kXifJMkbVrB9tyIzCIQ=\");","map":{"version":3,"names":["useState","useFormValidation","_s","values","setValues","error","setError","isInputValid","setisInputValid","isValid","setIsvalid","handleChange","evt","name","target","value","validationMessage","valid","form","firstValues","firsError","firstInputValid","check"],"sources":["/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/src/utils/formValidation.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function useFormValidation() {\n    const [values, setValues] = useState({})\n    const [error, setError] = useState({})\n    const [isInputValid, setisInputValid] = useState({})\n    const [isValid, setIsvalid] =useState(false)\n//  console.log(isValid )\n    function handleChange(evt){\n    const name = evt.target.name \n    const value = evt.target.value \n    const validationMessage = evt.target.validationMessage\n    const valid = evt.target.valid  \n    const form = evt.target.form  \n\n    setValues((firstValues) => {\n        return {...firstValues, [name]: value}\n    })\n    setError((firsError) => {\n        return {...firsError, [name]: validationMessage}\n    })\n    isInputValid((firstInputValid) => {\n        return {...firstInputValid, [name]: valid}\n    })\n    setIsvalid(form.check)\n    }\n    return { handleChange}\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAEV,QAAQ,CAAC,KAAK,CAAC;EAChD;EACI,SAASW,YAAYA,CAACC,GAAG,EAAC;IAC1B,MAAMC,IAAI,GAAGD,GAAG,CAACE,MAAM,CAACD,IAAI;IAC5B,MAAME,KAAK,GAAGH,GAAG,CAACE,MAAM,CAACC,KAAK;IAC9B,MAAMC,iBAAiB,GAAGJ,GAAG,CAACE,MAAM,CAACE,iBAAiB;IACtD,MAAMC,KAAK,GAAGL,GAAG,CAACE,MAAM,CAACG,KAAK;IAC9B,MAAMC,IAAI,GAAGN,GAAG,CAACE,MAAM,CAACI,IAAI;IAE5Bd,SAAS,CAAEe,WAAW,IAAK;MACvB,OAAO;QAAC,GAAGA,WAAW;QAAE,CAACN,IAAI,GAAGE;MAAK,CAAC;IAC1C,CAAC,CAAC;IACFT,QAAQ,CAAEc,SAAS,IAAK;MACpB,OAAO;QAAC,GAAGA,SAAS;QAAE,CAACP,IAAI,GAAGG;MAAiB,CAAC;IACpD,CAAC,CAAC;IACFT,YAAY,CAAEc,eAAe,IAAK;MAC9B,OAAO;QAAC,GAAGA,eAAe;QAAE,CAACR,IAAI,GAAGI;MAAK,CAAC;IAC9C,CAAC,CAAC;IACFP,UAAU,CAACQ,IAAI,CAACI,KAAK,CAAC;EACtB;EACA,OAAO;IAAEX;EAAY,CAAC;AAC1B;AAACT,EAAA,CAzBuBD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}