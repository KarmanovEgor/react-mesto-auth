{"ast":null,"code":"import _classCallCheck from\"/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.baseUrl;this._headers=options.headers;this._authorization=options.headers.authorization;}// получаем инфу о пользователе\n_createClass(Api,[{key:\"getInfo\",value:function getInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:{authorization:this._authorization}}).then(function(res){return res.ok?res.json():Promise.reject();});/* Возвращаем Promise, с информацией о пользователе. Если запрос не удался, Promise отклоняется.\n       */}// отправляем GET-запрос на сервер для получения списка карточек.\n// Возвращаем Promise, со списком карточек. Если запрос не удался, Promise отклоняется.\n},{key:\"getCards\",value:function getCards(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:{authorization:this._authorization}}).then(function(res){return res.ok?res.json():Promise.reject();});}// отправляем PATCH-запрос на сервер для обновления информации о пользователе.\n//  Возвращаем Promise,с обновленной информацией о пользователе. Если запрос не удался, Promise отклоняется.\n},{key:\"setUserInfo\",value:function setUserInfo(data){return fetch(\"\".concat(this._url,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:data.profilename,about:data.job})}).then(function(res){return res.ok?res.json():Promise.reject();});}// отправляем PATCH-запрос на сервер для обновления аватара пользователя.\n},{key:\"setUserAva\",value:function setUserAva(data){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(function(res){return res.ok?res.json():Promise.reject();});}// отправляем POST-запрос на сервер для добавления новой карточки.\n// Принимаем объект data, содержащий данные новой карточки: ссылку на изображение и название.\n// Возвращаем Promise, с информацией о новой карточке. Если запрос не удался, Promise отклоняется.\n},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._url,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:data.title,link:data.link})}).then(function(res){return res.ok?res.json():Promise.reject();});}// отправляем PUT-запрос на сервер для добавления лайка карточке.\n// Принимаем идентификатор карточки cardId. Возвращаем Promise,\n},{key:\"addLike\",value:function addLike(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:\"PUT\",headers:{authorization:this._authorization}}).then(function(res){return res.ok?res.json():Promise.reject();});}},{key:\"deleteLike\",value:function deleteLike(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:\"DELETE\",headers:{authorization:this._authorization}}).then(function(res){return res.ok?res.json():Promise.reject();});}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:{authorization:this._authorization}}).then(function(res){return res.ok?res.json():Promise.reject();});}}]);return Api;}();var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-66\",headers:{authorization:\"9a95746f-f7b1-457c-ba4e-3c32c962e5ea\",\"Content-Type\":\"application/json\"}});export default api;","map":{"version":3,"names":["Api","options","_classCallCheck","_url","baseUrl","_headers","headers","_authorization","authorization","_createClass","key","value","getInfo","fetch","concat","then","res","ok","json","Promise","reject","getCards","setUserInfo","data","method","body","JSON","stringify","name","profilename","about","job","setUserAva","avatar","addCard","title","link","addLike","cardId","deleteLike","deleteCard","api"],"sources":["/Users/egorkarmanov/Desktop/yandex/mestoreact/mesto-react/src/utils/api.js"],"sourcesContent":[" class Api {\n    constructor(options) {\n      this._url = options.baseUrl;\n      this._headers = options.headers;\n      this._authorization = options.headers.authorization;\n    }\n    // получаем инфу о пользователе\n    getInfo() {\n      return fetch(`${this._url}/users/me`, {\n        headers: {\n          authorization: this._authorization,\n        },\n      }).then((res) => (res.ok ? res.json() : Promise.reject()));\n      /* Возвращаем Promise, с информацией о пользователе. Если запрос не удался, Promise отклоняется.\n       */\n    }\n  \n    // отправляем GET-запрос на сервер для получения списка карточек.\n    // Возвращаем Promise, со списком карточек. Если запрос не удался, Promise отклоняется.\n    getCards() {\n      return fetch(`${this._url}/cards`, {\n        headers: {\n          authorization: this._authorization,\n        },\n      }).then((res) => (res.ok ? res.json() : Promise.reject()));\n    }\n  \n    // отправляем PATCH-запрос на сервер для обновления информации о пользователе.\n    //  Возвращаем Promise,с обновленной информацией о пользователе. Если запрос не удался, Promise отклоняется.\n    setUserInfo(data) {\n      return fetch(`${this._url}/users/me`, {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.profilename,\n          about: data.job,\n        }),\n      }).then((res) => (res.ok ? res.json() : Promise.reject()));\n    }\n  \n    // отправляем PATCH-запрос на сервер для обновления аватара пользователя.\n    setUserAva(data) {\n      return fetch(`${this._url}/users/me/avatar`, {\n        method: \"PATCH\",\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: data.avatar,\n        }),\n      }).then((res) => (res.ok ? res.json() : Promise.reject()));\n    }\n  \n    // отправляем POST-запрос на сервер для добавления новой карточки.\n    // Принимаем объект data, содержащий данные новой карточки: ссылку на изображение и название.\n    // Возвращаем Promise, с информацией о новой карточке. Если запрос не удался, Promise отклоняется.\n    addCard(data) {\n      return fetch(`${this._url}/cards`, {\n        method: \"POST\",\n        headers: this._headers,\n        body: JSON.stringify({\n          name: data.title,\n          link: data.link,\n        }),\n      }).then((res) => (res.ok ? res.json() : Promise.reject()));\n    }\n  \n    // отправляем PUT-запрос на сервер для добавления лайка карточке.\n    // Принимаем идентификатор карточки cardId. Возвращаем Promise,\n    addLike(cardId) {\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: \"PUT\",\n        headers: {\n          authorization: this._authorization,\n        },\n      }).then((res) => (res.ok ? res.json() : Promise.reject()));\n    }\n  \n    deleteLike(cardId) {\n      return fetch(`${this._url}/cards/${cardId}/likes`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: this._authorization,\n        },\n      }).then((res) => (res.ok ? res.json() : Promise.reject()));\n    }\n    deleteCard(cardId) {\n      return fetch(`${this._url}/cards/${cardId}`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: this._authorization,\n        },\n      }).then((res) => (res.ok ? res.json() : Promise.reject()));\n    }\n  }\n  const api = new Api({ \n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66\",\n    headers: {\n      authorization: \"9a95746f-f7b1-457c-ba4e-3c32c962e5ea\",\n      \"Content-Type\": \"application/json\",\n    },\n  });\nexport default api;"],"mappings":"+RAAO,CAAAA,GAAG,yBACN,SAAAA,IAAYC,OAAO,CAAE,CAAAC,eAAA,MAAAF,GAAA,EACnB,IAAI,CAACG,IAAI,CAAGF,OAAO,CAACG,OAAO,CAC3B,IAAI,CAACC,QAAQ,CAAGJ,OAAO,CAACK,OAAO,CAC/B,IAAI,CAACC,cAAc,CAAGN,OAAO,CAACK,OAAO,CAACE,aAAa,CACrD,CACA;AAAAC,YAAA,CAAAT,GAAA,GAAAU,GAAA,WAAAC,KAAA,CACA,SAAAC,QAAA,CAAU,CACR,MAAO,CAAAC,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACX,IAAI,cAAa,CACpCG,OAAO,CAAE,CACPE,aAAa,CAAE,IAAI,CAACD,cACtB,CACF,CAAC,CAAC,CAACQ,IAAI,CAAC,SAACC,GAAG,QAAM,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAC,CAAC,CAC1D;AACN,SACI,CAEA;AACA;AAAA,GAAAV,GAAA,YAAAC,KAAA,CACA,SAAAU,SAAA,CAAW,CACT,MAAO,CAAAR,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACX,IAAI,WAAU,CACjCG,OAAO,CAAE,CACPE,aAAa,CAAE,IAAI,CAACD,cACtB,CACF,CAAC,CAAC,CAACQ,IAAI,CAAC,SAACC,GAAG,QAAM,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAC,CAAC,CAC5D,CAEA;AACA;AAAA,GAAAV,GAAA,eAAAC,KAAA,CACA,SAAAW,YAAYC,IAAI,CAAE,CAChB,MAAO,CAAAV,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACX,IAAI,cAAa,CACpCqB,MAAM,CAAE,OAAO,CACflB,OAAO,CAAE,IAAI,CAACD,QAAQ,CACtBoB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,IAAI,CAAEL,IAAI,CAACM,WAAW,CACtBC,KAAK,CAAEP,IAAI,CAACQ,GACd,CAAC,CACH,CAAC,CAAC,CAAChB,IAAI,CAAC,SAACC,GAAG,QAAM,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAC,CAAC,CAC5D,CAEA;AAAA,GAAAV,GAAA,cAAAC,KAAA,CACA,SAAAqB,WAAWT,IAAI,CAAE,CACf,MAAO,CAAAV,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACX,IAAI,qBAAoB,CAC3CqB,MAAM,CAAE,OAAO,CACflB,OAAO,CAAE,IAAI,CAACD,QAAQ,CACtBoB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBM,MAAM,CAAEV,IAAI,CAACU,MACf,CAAC,CACH,CAAC,CAAC,CAAClB,IAAI,CAAC,SAACC,GAAG,QAAM,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAC,CAAC,CAC5D,CAEA;AACA;AACA;AAAA,GAAAV,GAAA,WAAAC,KAAA,CACA,SAAAuB,QAAQX,IAAI,CAAE,CACZ,MAAO,CAAAV,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACX,IAAI,WAAU,CACjCqB,MAAM,CAAE,MAAM,CACdlB,OAAO,CAAE,IAAI,CAACD,QAAQ,CACtBoB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBC,IAAI,CAAEL,IAAI,CAACY,KAAK,CAChBC,IAAI,CAAEb,IAAI,CAACa,IACb,CAAC,CACH,CAAC,CAAC,CAACrB,IAAI,CAAC,SAACC,GAAG,QAAM,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAC,CAAC,CAC5D,CAEA;AACA;AAAA,GAAAV,GAAA,WAAAC,KAAA,CACA,SAAA0B,QAAQC,MAAM,CAAE,CACd,MAAO,CAAAzB,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACX,IAAI,YAAAW,MAAA,CAAUwB,MAAM,WAAU,CACjDd,MAAM,CAAE,KAAK,CACblB,OAAO,CAAE,CACPE,aAAa,CAAE,IAAI,CAACD,cACtB,CACF,CAAC,CAAC,CAACQ,IAAI,CAAC,SAACC,GAAG,QAAM,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAC,CAAC,CAC5D,CAAC,GAAAV,GAAA,cAAAC,KAAA,CAED,SAAA4B,WAAWD,MAAM,CAAE,CACjB,MAAO,CAAAzB,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACX,IAAI,YAAAW,MAAA,CAAUwB,MAAM,WAAU,CACjDd,MAAM,CAAE,QAAQ,CAChBlB,OAAO,CAAE,CACPE,aAAa,CAAE,IAAI,CAACD,cACtB,CACF,CAAC,CAAC,CAACQ,IAAI,CAAC,SAACC,GAAG,QAAM,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAC,CAAC,CAC5D,CAAC,GAAAV,GAAA,cAAAC,KAAA,CACD,SAAA6B,WAAWF,MAAM,CAAE,CACjB,MAAO,CAAAzB,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACX,IAAI,YAAAW,MAAA,CAAUwB,MAAM,EAAI,CAC3Cd,MAAM,CAAE,QAAQ,CAChBlB,OAAO,CAAE,CACPE,aAAa,CAAE,IAAI,CAACD,cACtB,CACF,CAAC,CAAC,CAACQ,IAAI,CAAC,SAACC,GAAG,QAAM,CAAAA,GAAG,CAACC,EAAE,CAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAGC,OAAO,CAACC,MAAM,CAAC,CAAC,EAAC,CAAC,CAC5D,CAAC,WAAApB,GAAA,KAEH,GAAM,CAAAyC,GAAG,CAAG,GAAI,CAAAzC,GAAG,CAAC,CAClBI,OAAO,CAAE,6CAA6C,CACtDE,OAAO,CAAE,CACPE,aAAa,CAAE,sCAAsC,CACrD,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CACJ,cAAe,CAAAiC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}